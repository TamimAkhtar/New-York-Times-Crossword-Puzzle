package sample;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import org.json.JSONObject;


/* Meriam class is used for finding synonyms of words which are generated by Datamuse API
 * The idea is borrowed from following website:
 * https://chillyfacts.com/java-send-http-getpost-request-and-read-json-response/
 *
 * */
public class Merriam  {

    // Declaring  Attributes
    public ArrayList<PuzzleClue> todaysClues;
    public ArrayList syn = new ArrayList<>();

    //Constructor
    Merriam( ArrayList<PuzzleClue> todaysClues){
        this.todaysClues=todaysClues;
    }

    /*
     * findSynonym function is used form finding synonyms of solution candidates
     * @param solnSize, clueNumber
     * */
    void findSynonym(int clueNumber, int solnSize) throws IOException {

        ArrayList<String> clue=todaysClues.get(clueNumber).getSolutionCandidates();
        for(int j=0; j<clue.size(); j++){
            String umpire=clue.get(j);
            String url= "https://www.dictionaryapi.com/api/v3/references/thesaurus/json/"+umpire+"?key=cbc88add-0ccb-4f44-bbf4-b7104ff8a8a9";
            URL obj = new URL (url);

            HttpURLConnection con = (HttpURLConnection) obj.openConnection();
            con.setRequestMethod("GET");
            con.setRequestProperty("Content-Type", "application/json; utf-8");
            con.setRequestProperty("Accept", "application/json");
            int responseCode = con.getResponseCode();
            System.out.println("\n Sending 'GET' request to URL : " + url);
            BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
            String input;
            StringBuffer response = new StringBuffer();
            while ((input = in.readLine()) != null) {
                response.append(input);
            }
            in.close();
            System.out.println("Response from Merriam Webster server is acquired.");
            JSONObject myResponse;

            if(response.toString().charAt(1) =='{'){
                myResponse = new JSONObject(response.toString().substring(1));
                System.out.println("Result after Reading JSON Response.");
                System.out.println("Lenght of response: "+myResponse.length());
                //System.out.println("All synonyms: "+  myResponse.getJSONObject("meta").getJSONArray("syns"));
                System.out.println("Lenght of synonyms:"+myResponse.getJSONObject("meta").getJSONArray("syns").getJSONArray(0).length());
                int lenght_of_syn=myResponse.getJSONObject("meta").getJSONArray("syns").getJSONArray(0).length();

                //Addition of synonyms which are equal to size of the solution
                int counter=0;
                for (int k=0;k<lenght_of_syn;k++){
                    if((myResponse.getJSONObject("meta").getJSONArray("syns").getJSONArray(0).get(k)).toString().length()== solnSize){
                        syn.add(myResponse.getJSONObject("meta").getJSONArray("syns").getJSONArray(0).get(k));
                        counter++;
                    }
                }

                for (int b=0;b<counter;b++){
                    System.out.println(b+": "+syn.get(b));
                }
            }
        }
    }
}
